<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:Spravy.Ui.Models"
             xmlns:interfaces="clr-namespace:Spravy.Ui.Interfaces"
             xmlns:handlers="clr-namespace:Spravy.Ui.Handlers"
             xmlns:extensionFramework="clr-namespace:ExtensionFramework.AvaloniaUi.Converters;assembly=ExtensionFramework.AvaloniaUi"
             xmlns:converters="clr-namespace:Spravy.Ui.Converters"
             xmlns:themes="clr-namespace:Material.Styles.Themes;assembly=Material.Styles"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:dialogHostAvalonia="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
             xmlns:viewModels="clr-namespace:Spravy.Ui.ViewModels"
             x:Class="Spravy.Ui.App"
             RequestedThemeVariant="Dark">
    <Application.Styles>
        <FluentTheme DensityStyle="Compact" />
        <dialogHostAvalonia:DialogHostStyles />
        <StyleInclude Source="avares://ExtensionFramework.AvaloniaUi/Styles/Theme.axaml" />
        <themes:MaterialTheme BaseTheme="Dark" PrimaryColor="Blue" SecondaryColor="Yellow" />
        <avalonia:MaterialIconStyles />
        <StyleInclude Source="avares://ExtensionFramework.AvaloniaUi.Material/Styles/Theme.axaml" />

        <Style Selector="ListBox.ItemsDragAndDrop">
            <Style.Resources>
                <handlers:ItemsListBoxDropHandlerToDoItemNotify x:Key="ItemsListBoxDropHandler" />
            </Style.Resources>

            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDropBehavior Handler="{StaticResource ItemsListBoxDropHandler}" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="ListBox.ItemsDragAndDrop ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDragBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="Button">
            <Setter Property="Margin" Value="5" />
        </Style>
    </Application.Styles>

    <Application.DataTemplates>
        <DataTemplate DataType="models:ToDoItemParentNotify">
            <Button Margin="3"
                    Command="{Binding $parent[interfaces:IPathView].ChangeToDoItemByPathCommand}"
                    CommandParameter="{Binding}">
                <TextBlock Text="{Binding Name}" />
            </Button>
        </DataTemplate>

        <DataTemplate DataType="models:RootItem">
            <Button Margin="3"
                    Command="{Binding $parent[interfaces:IPathView].ToRootItemCommand}">
                <avalonia:MaterialIcon Kind="Home" />
            </Button>
        </DataTemplate>

        <DataTemplate DataType="models:ToDoSubItemValueNotify">
            <controls:Card ToolTip.Tip="{Binding Description, Converter={StaticResource EmptyStringToNullConverter}}">
                <Grid ColumnDefinitions="Auto,*">
                    <Rectangle Width="10"
                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />

                    <Grid Grid.Column="1"
                          ColumnDefinitions="*,Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="5">
                        <StackPanel HorizontalAlignment="Left">
                            <Grid ColumnDefinitions="Auto,*">
                                <CheckBox IsChecked="{Binding IsCompleted}"
                                          IsEnabled="False" />

                                <TextBlock Grid.Column="1"
                                           Text="{Binding Name}"
                                           Classes="Headline6"
                                           TextWrapping="Wrap" />
                            </Grid>

                            <Grid RowDefinitions="Auto,Auto,Auto">
                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal">
                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding CompletedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding CompletedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="CheckBold" Foreground="Green" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding SkippedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding SkippedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Alert" Foreground="Yellow" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding FailedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding FailedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Cancel" Foreground="Red" />
                                    </Grid>
                                </WrapPanel>

                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal"
                                           IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}">
                                    <TextBlock Text="{Binding Active.Name}"
                                               TextWrapping="Wrap"
                                               VerticalAlignment="Center" />

                                    <Button CommandParameter="{Binding Active}"
                                            Command="{Binding $parent[interfaces:IToDoItemView].ChangeToActiveDoItemCommand}">
                                        <avalonia:MaterialIcon Kind="Send" />
                                    </Button>
                                </WrapPanel>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Column="1" ColumnDefinitions="*,*" RowDefinitions="*,*">
                            <Button
                                Command="{Binding $parent[interfaces:ICompleteSubToDoItemCommand].CompleteSubToDoItemCommand}"
                                CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Check" />
                            </Button>

                            <Button Grid.Column="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].DeleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Delete" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].RemoveSubToDoItemFromCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent}">
                                <avalonia:MaterialIcon Kind="Star" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].AddSubToDoItemToCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent, Converter={StaticResource ReverseBooleanValueConverter}}">
                                <avalonia:MaterialIcon Kind="StarOutline" />
                            </Button>

                            <Button Grid.Column="1"
                                    Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].ChangeToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Send" />
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </controls:Card>
        </DataTemplate>

        <DataTemplate DataType="models:ToDoSubItemGroupNotify">
            <controls:Card ToolTip.Tip="{Binding Description, Converter={StaticResource EmptyStringToNullConverter}}">
                <Grid ColumnDefinitions="Auto,*">
                    <Rectangle Width="10"
                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />

                    <Grid Grid.Column="1"
                          ColumnDefinitions="*,Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="5">
                        <WrapPanel HorizontalAlignment="Left"
                                   Orientation="Vertical">
                            <TextBlock Text="{Binding Name}"
                                       Classes="Headline6"
                                       TextWrapping="Wrap" />

                            <WrapPanel Orientation="Horizontal"
                                       IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}">
                                <TextBlock Text="{Binding Active.Name}"
                                           TextWrapping="Wrap"
                                           VerticalAlignment="Center" />

                                <Button CommandParameter="{Binding Active}"
                                        Command="{Binding $parent[interfaces:IToDoItemView].ChangeToActiveDoItemCommand}">
                                    <avalonia:MaterialIcon Kind="Send" />
                                </Button>
                            </WrapPanel>
                        </WrapPanel>

                        <Grid Grid.Column="1" ColumnDefinitions="*,*" RowDefinitions="*,*">
                            <Button Grid.Column="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].DeleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Delete" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].RemoveSubToDoItemFromCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent}">
                                <avalonia:MaterialIcon Kind="Star" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].AddSubToDoItemToCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent, Converter={StaticResource ReverseBooleanValueConverter}}">
                                <avalonia:MaterialIcon Kind="StarOutline" />
                            </Button>

                            <Button Grid.Column="1"
                                    Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].ChangeToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Send" />
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </controls:Card>
        </DataTemplate>

        <DataTemplate DataType="models:ToDoSubItemPlannedNotify">
            <controls:Card ToolTip.Tip="{Binding Description, Converter={StaticResource EmptyStringToNullConverter}}">
                <Grid ColumnDefinitions="Auto,*">
                    <Rectangle Width="10"
                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />

                    <Grid Grid.Column="1"
                          ColumnDefinitions="*,Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="5">
                        <StackPanel HorizontalAlignment="Left">
                            <Grid ColumnDefinitions="Auto,*">
                                <CheckBox IsChecked="{Binding IsCompleted}"
                                          IsEnabled="False" />

                                <TextBlock Grid.Column="1"
                                           Text="{Binding Name}"
                                           Classes="Headline6"
                                           TextWrapping="Wrap" />
                            </Grid>

                            <TextBlock Text="{Binding DueDate, StringFormat=\{0:yyyy.MM.dd\}}" />

                            <Grid RowDefinitions="Auto,Auto,Auto">
                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal">
                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding CompletedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding CompletedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="CheckBold" Foreground="Green" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding SkippedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding SkippedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Alert" Foreground="Yellow" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding FailedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding FailedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Cancel" Foreground="Red" />
                                    </Grid>
                                </WrapPanel>

                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal"
                                           IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}">
                                    <TextBlock Text="{Binding Active.Name}"
                                               TextWrapping="Wrap"
                                               VerticalAlignment="Center" />

                                    <Button CommandParameter="{Binding Active}"
                                            Command="{Binding $parent[interfaces:IToDoItemView].ChangeToActiveDoItemCommand}">
                                        <avalonia:MaterialIcon Kind="Send" />
                                    </Button>
                                </WrapPanel>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Column="1" ColumnDefinitions="*,*" RowDefinitions="*,*">
                            <Button
                                Command="{Binding $parent[interfaces:ICompleteSubToDoItemCommand].CompleteSubToDoItemCommand}"
                                CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Check" />
                            </Button>

                            <Button Grid.Column="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].DeleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Delete" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].RemoveSubToDoItemFromCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent}">
                                <avalonia:MaterialIcon Kind="Star" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].AddSubToDoItemToCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent, Converter={StaticResource ReverseBooleanValueConverter}}">
                                <avalonia:MaterialIcon Kind="StarOutline" />
                            </Button>

                            <Button Grid.Column="1"
                                    Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].ChangeToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Send" />
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </controls:Card>
        </DataTemplate>

        <DataTemplate DataType="models:ToDoSubItemPeriodicityNotify">
            <controls:Card ToolTip.Tip="{Binding Description, Converter={StaticResource EmptyStringToNullConverter}}">
                <Grid ColumnDefinitions="Auto,*">
                    <Rectangle Width="10"
                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />

                    <Grid Grid.Column="1"
                          ColumnDefinitions="*,Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="5">
                        <StackPanel HorizontalAlignment="Left">
                            <TextBlock Text="{Binding Name}"
                                       Classes="Headline6"
                                       TextWrapping="Wrap" />

                            <TextBlock Text="{Binding DueDate, StringFormat=\{0:yyyy.MM.dd\}}" />

                            <Grid RowDefinitions="Auto,Auto,Auto">
                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal">
                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding CompletedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding CompletedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="CheckBold" Foreground="Green" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding SkippedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding SkippedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Alert" Foreground="Yellow" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding FailedCount, Converter={StaticResource UInt32ToIsVisibleConverter}}">
                                        <TextBlock Text="{Binding FailedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Cancel" Foreground="Red" />
                                    </Grid>
                                </WrapPanel>

                                <WrapPanel Grid.Row="1"
                                           Orientation="Horizontal"
                                           IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}">
                                    <TextBlock Text="{Binding Active.Name}"
                                               TextWrapping="Wrap"
                                               VerticalAlignment="Center" />

                                    <Button CommandParameter="{Binding Active}"
                                            Command="{Binding $parent[interfaces:IToDoItemView].ChangeToActiveDoItemCommand}">
                                        <avalonia:MaterialIcon Kind="Send" />
                                    </Button>
                                </WrapPanel>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Column="1" ColumnDefinitions="*,*" RowDefinitions="*,*">
                            <Button
                                Command="{Binding $parent[interfaces:ICompleteSubToDoItemCommand].CompleteSubToDoItemCommand}"
                                CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Check" />
                            </Button>

                            <Button Grid.Column="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].DeleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Delete" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].RemoveSubToDoItemFromCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent}">
                                <avalonia:MaterialIcon Kind="Star" />
                            </Button>

                            <Button Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IChangeCurrentStatusToDoItemCommand].AddSubToDoItemToCurrentCommand}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsCurrent, Converter={StaticResource ReverseBooleanValueConverter}}">
                                <avalonia:MaterialIcon Kind="StarOutline" />
                            </Button>

                            <Button Grid.Column="1"
                                    Grid.Row="1"
                                    Command="{Binding $parent[interfaces:IToDoItemView].ChangeToDoItemCommand}"
                                    CommandParameter="{Binding}">
                                <avalonia:MaterialIcon Kind="Send" />
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </controls:Card>
        </DataTemplate>

        <DataTemplate DataType="viewModels:AnnuallyPeriodicityViewModel">
            <ContentControl Content="{Binding DayOfYearSelector}" />
        </DataTemplate>

        <DataTemplate DataType="viewModels:DailyPeriodicityViewModel" />

        <DataTemplate DataType="viewModels:MonthlyPeriodicityViewModel">
            <ContentControl Content="{Binding DayOfMonthSelector}" />
        </DataTemplate>

        <DataTemplate DataType="viewModels:WeeklyPeriodicityViewModel">
            <ContentControl Content="{Binding DayOfWeekSelector}" />
        </DataTemplate>
    </Application.DataTemplates>

    <Application.Resources>
        <extensionFramework:ObjectToVisibleValueConverter x:Key="ObjectToVisibleValueConverter" />
        <converters:ToDoItemStatusToBrushValueConverter x:Key="ToDoItemStatusToBrushValueConverter" />
        <converters:ReverseBooleanValueConverter x:Key="ReverseBooleanValueConverter" />
        <converters:EmptyStringToNullConverter x:Key="EmptyStringToNullConverter" />
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />
        <converters:UInt32ToIsVisibleConverter x:Key="UInt32ToIsVisibleConverter" />
    </Application.Resources>
</Application>