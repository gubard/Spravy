<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:Spravy.Ui.Models"
             xmlns:interfaces="clr-namespace:Spravy.Ui.Interfaces"
             xmlns:handlers="clr-namespace:Spravy.Ui.Handlers"
             xmlns:extensionFramework="clr-namespace:ExtensionFramework.AvaloniaUi.Converters;assembly=ExtensionFramework.AvaloniaUi"
             xmlns:converters="clr-namespace:Spravy.Ui.Converters"
             xmlns:themes="clr-namespace:Material.Styles.Themes;assembly=Material.Styles"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:dialogHostAvalonia="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             x:Class="Spravy.Ui.App"
             RequestedThemeVariant="Dark">
    <Application.Styles>
        <FluentTheme DensityStyle="Compact" />
        <dialogHostAvalonia:DialogHostStyles />
        <StyleInclude Source="avares://ExtensionFramework.AvaloniaUi/Styles/Theme.axaml" />
        <themes:MaterialTheme BaseTheme="Dark" PrimaryColor="Purple" SecondaryColor="Lime" />
        <avalonia:MaterialIconStyles />
        <StyleInclude Source="avares://ExtensionFramework.AvaloniaUi.Material/Styles/Theme.axaml" />

        <Style Selector="ListBox.ItemsDragAndDrop">
            <Style.Resources>
                <handlers:ItemsListBoxDropHandlerToDoItemNotify x:Key="ItemsListBoxDropHandler" />
            </Style.Resources>

            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDropBehavior Handler="{StaticResource ItemsListBoxDropHandler}" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="ListBox.ItemsDragAndDrop ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ContextDragBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>
    </Application.Styles>

    <Application.DataTemplates>
        <DataTemplate DataType="models:ToDoItemNotify">
            <Button Padding="0"
                    Margin="0"
                    BorderThickness="0"
                    Background="Transparent"
                    ToolTip.Tip="{Binding Description}"
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Command="{Binding $parent[interfaces:IToDoItemView].ChangeToDoItemCommand}"
                    CommandParameter="{Binding}">
                <Grid ColumnDefinitions="Auto,*" ToolTip.Tip="{Binding Description}">
                    <Rectangle Width="10"
                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />

                    <Grid Grid.Column="1"
                          ColumnDefinitions="*,Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Margin="5">
                        <StackPanel HorizontalAlignment="Left">
                            <Grid ColumnDefinitions="Auto,*">
                                <CheckBox IsChecked="{Binding IsComplete}"
                                          IsEnabled="False" />

                                <TextBlock Grid.Column="1"
                                           Text="{Binding Name}"
                                           Classes="Headline6"
                                           TextWrapping="Wrap" />
                            </Grid>

                            <Grid RowDefinitions="Auto,Auto">
                                <TextBlock Text="{Binding DueDate, StringFormat=\{0:yyyy.MM.dd\}}"
                                           Classes="Body2"
                                           IsVisible="{Binding DueDate, Converter={StaticResource ObjectToVisibleValueConverter}}" />

                                <StackPanel Grid.Row="1"
                                            Orientation="Horizontal">
                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding Converter={StaticResource ToDoItemNotifyToIsVisibleCompletedCountConverter}}">
                                        <TextBlock Text="{Binding CompletedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="CheckBold" Foreground="Green" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding Converter={StaticResource ToDoItemNotifyToIsVisibleSkippedCountConverter}}">
                                        <TextBlock Text="{Binding SkippedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Alert" Foreground="Yellow" />
                                    </Grid>

                                    <Grid RowDefinitions="Auto,*"
                                          IsVisible="{Binding Converter={StaticResource ToDoItemNotifyToIsVisibleFailedCountConverter}}">
                                        <TextBlock Text="{Binding FailedCount}"
                                                   Classes="Body2"
                                                   HorizontalAlignment="Center" />

                                        <avalonia:MaterialIcon Grid.Row="1" Kind="Cancel" Foreground="Red" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button Command="{Binding $parent[interfaces:IToDoItemView].DeleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}"
                                    Content="Delete" />

                            <Button Command="{Binding $parent[interfaces:IToDoItemView].CompleteSubToDoItemCommand}"
                                    CommandParameter="{Binding}"
                                    Content="Complete" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </Button>
        </DataTemplate>
    </Application.DataTemplates>

    <Application.Resources>
        <extensionFramework:ObjectToVisibleValueConverter x:Key="ObjectToVisibleValueConverter" />
        <converters:ToDoItemStatusToBrushValueConverter x:Key="ToDoItemStatusToBrushValueConverter" />
        <converters:ReverseBooleanValueConverter x:Key="ReverseBooleanValueConverter" />

        <converters:ToDoItemNotifyToIsVisibleCompletedCountConverter
            x:Key="ToDoItemNotifyToIsVisibleCompletedCountConverter" />

        <converters:ToDoItemNotifyToIsVisibleSkippedCountConverter
            x:Key="ToDoItemNotifyToIsVisibleSkippedCountConverter" />

        <converters:ToDoItemNotifyToIsVisibleFailedCountConverter
            x:Key="ToDoItemNotifyToIsVisibleFailedCountConverter" />
    </Application.Resources>
</Application>