<ru:ReactiveUserControl x:TypeArguments="vm:TodayToDoItemsViewModel"
                        xmlns="https://github.com/avaloniaui"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:ru="http://reactiveui.net"
                        xmlns:vm="clr-namespace:Spravy.Ui.Features.ToDo.ViewModels"
                        xmlns:m="clr-namespace:Spravy.Ui.Models"
                        xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                        xmlns:h="clr-namespace:Spravy.Ui.Helpers"
                        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                        x:Class="Spravy.Ui.Features.ToDo.Views.TodayToDoItemsView"
                        x:DataType="vm:TodayToDoItemsViewModel">
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Initialized">
            <InvokeCommandAction Command="{Binding InitializedCommand.Command}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>

    <Grid RowDefinitions="Auto,*">
        <Grid ColumnDefinitions="Auto,*,Auto">
            <StackPanel Orientation="Horizontal">
                <Button Command="{x:Static h:UiHelper.SwitchPane}">
                    <mi:MaterialIcon Kind="Menu" />
                </Button>

                <ContentControl Content="{x:Static h:UiHelper.NavigateToCurrentToDoItem}" />
            </StackPanel>

            <ScrollViewer Grid.Column="1"
                          VerticalScrollBarVisibility="Disabled"
                          HorizontalScrollBarVisibility="Auto"
                          HorizontalAlignment="Left">
                <TextBlock Text="{DynamicResource TodayToDoItemsView.Header}" />
            </ScrollViewer>

            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Panel
                    IsVisible="{Binding Commands.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                    <ItemsControl HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  ItemsSource="{Binding Commands}"
                                  Classes="adaptive-commands-items-control">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.DataTemplates>
                            <DataTemplate DataType="m:SpravyCommandNotify">
                                <Button Command="{Binding Item.Command}"
                                        CommandParameter="{Binding $parent[ItemsControl].DataContext}"
                                        Content="{Binding Kind}"
                                        ToolTip.Tip="{Binding Text}" />
                            </DataTemplate>
                        </ItemsControl.DataTemplates>
                    </ItemsControl>

                    <Button Classes="adaptive-commands-button mode-press alignment-right">
                        <Button.DataTemplates>
                            <DataTemplate x:DataType="m:SpravyCommandNotify">
                                <ContentControl Content="{Binding Text}" />
                            </DataTemplate>
                        </Button.DataTemplates>

                        <Button.Styles>
                            <Style Selector="MenuItem" x:DataType="m:SpravyCommandNotify">
                                <Setter Property="Command" Value="{Binding Item.Command}" />
                                <Setter Property="CommandParameter" Value="{Binding $parent[Button].DataContext}" />
                                <Setter Property="Icon" Value="{Binding Kind}" />
                            </Style>
                        </Button.Styles>

                        <Button.Flyout>
                            <MenuFlyout ItemsSource="{Binding Commands}" />
                        </Button.Flyout>

                        <mi:MaterialIcon Kind="DotsHorizontal" />
                    </Button>
                </Panel>
            </StackPanel>
        </Grid>

        <ScrollViewer Grid.Row="1">
            <ContentControl Content="{Binding ToDoSubItemsViewModel}" />
        </ScrollViewer>
    </Grid>
</ru:ReactiveUserControl>