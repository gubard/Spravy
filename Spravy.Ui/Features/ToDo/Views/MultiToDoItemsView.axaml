<c:MainUserControl x:TypeArguments="vm:MultiToDoItemsViewModel" xmlns="https://github.com/avaloniaui"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:vm="clr-namespace:Spravy.Ui.Features.ToDo.ViewModels"
                   xmlns:v="clr-namespace:Spravy.Ui.Features.ToDo.Views"
                   xmlns:tm="clr-namespace:Spravy.Ui.Features.ToDo.Models"
                   xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                   xmlns:c="clr-namespace:Spravy.Ui.Controls"
                   xmlns:te="clr-namespace:Spravy.Ui.Features.ToDo.Enums"
                   xmlns:h="clr-namespace:Spravy.Ui.Helpers"
                   xmlns:m="clr-namespace:Spravy.Ui.Models"
                   mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                   x:Class="Spravy.Ui.Features.ToDo.Views.MultiToDoItemsView"
                   x:DataType="vm:MultiToDoItemsViewModel"
                   Classes.none="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.None}}"
                   Classes.by-status="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByStatus}}"
                   Classes.by-type="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByType}}"
                   Classes.multi="{Binding IsMulti}">
    <UserControl.Styles>
        <Style Selector="c|GridColumnStackControl.none">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="c|GridColumnStackControl.to-do-items-control">
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="tm:ToDoItemEntityNotify">
                    <Button x:Name="RootToDoItemButton"
                            Command="{x:Static h:UiHelper.NavigateToToDoItem}"
                            CommandParameter="{Binding}"
                            Classes="alignment-stretch content-alignment-stretch to-do-item">
                        <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto, Auto,*">
                            <ToggleButton Grid.Row="1"
                                          Grid.RowSpan="2"
                                          BorderThickness="1"
                                          BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                          Classes="alignment-top"
                                          Width="50"
                                          Height="50"
                                          Margin="0,0,5,5"
                                          Command="{x:Static h:UiHelper.Complete}"
                                          CommandParameter="{Binding}"
                                          IsVisible="{Binding IsCan, Converter={StaticResource ToDoItemCanNoneToBooleanReverseConverter}}"
                                          IsChecked="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanConverter}}">
                                <mi:MaterialIcon Kind="Check"
                                                 Width="45"
                                                 Height="45"
                                                 IsVisible="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanConverter}}" />
                            </ToggleButton>

                            <Grid Grid.ColumnSpan="3" ColumnDefinitions="Auto,Auto,*,Auto,*,Auto,Auto">
                                <Rectangle Width="15"
                                           Margin="0,0,3,0"
                                           Height="2"
                                           Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                <TextBlock Grid.Column="1"
                                           Text="{Binding Type, Converter={StaticResource ToDoItemTypeLocalizationValueConverter}}" />
                                <Rectangle Grid.Column="2"
                                           Margin="3,0,3,0"
                                           Height="2"
                                           Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                <mi:MaterialIcon Grid.Column="3"
                                                 Background="Transparent"
                                                 Width="20"
                                                 Height="20"
                                                 Kind="ReorderHorizontal" />
                                <Rectangle Grid.Column="4"
                                           Margin="3,0,3,0"
                                           Height="2"
                                           Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                <TextBlock Grid.Column="5"
                                           Text="{Binding Status, Converter={StaticResource ToDoItemStatusLocalizationValueConverter}}" />
                                <Rectangle Grid.Column="6"
                                           Width="15"
                                           Margin="3,0,0,0"
                                           Height="2"
                                           Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                            </Grid>

                            <StackPanel Grid.Column="1" Grid.Row="2">
                                <TextBlock Margin="5,5,0,0"
                                           Classes="text-wrap vertical-alignment-center alignment-left"
                                           Text="{Binding Name}" />

                                <Button Margin="0,0,0,5"
                                        IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}"
                                        Command="{x:Static h:UiHelper.NavigateToActiveToDoItem}"
                                        CommandParameter="{Binding}">
                                    <TextBlock Text="{Binding Active.Name}" TextWrapping="Wrap" />
                                </Button>
                            </StackPanel>

                            <Grid Grid.Row="2"
                                  Grid.Column="2"
                                  ColumnDefinitions="Auto,Auto"
                                  RowDefinitions="Auto,Auto">
                                <Button>
                                    <Button.DataTemplates>
                                        <DataTemplate x:DataType="m:SpravyCommandNotify">
                                            <ContentControl Content="{Binding Text}" />
                                        </DataTemplate>
                                    </Button.DataTemplates>

                                    <Button.Styles>
                                        <Style Selector="MenuItem" x:DataType="m:SpravyCommandNotify">
                                            <Setter Property="Command" Value="{Binding Item.Command}" />
                                            <Setter Property="CommandParameter"
                                                    Value="{Binding $parent[Button].DataContext}" />

                                            <Setter Property="Icon">
                                                <Template>
                                                    <mi:MaterialIcon Kind="{Binding Kind}" />
                                                </Template>
                                            </Setter>
                                        </Style>
                                    </Button.Styles>

                                    <Button.Flyout>
                                        <MenuFlyout ItemsSource="{Binding CompactCommands}" />
                                    </Button.Flyout>

                                    <mi:MaterialIcon Kind="DotsHorizontal" />
                                </Button>

                                <Panel Grid.Column="1">
                                    <Button Command="{x:Static h:UiHelper.RemoveFromFavorite}"
                                            CommandParameter="{Binding}"
                                            IsVisible="{Binding IsFavorite}">
                                        <mi:MaterialIcon Kind="Star" />
                                    </Button>

                                    <Button Command="{x:Static h:UiHelper.AddToFavorite}"
                                            CommandParameter="{Binding}"
                                            IsVisible="{Binding IsFavorite, Converter={StaticResource ReverseBooleanValueConverter}}">
                                        <mi:MaterialIcon Kind="StarOutline" />
                                    </Button>
                                </Panel>

                                <Button Grid.Row="1"
                                        Grid.Column="1"
                                        Command="{x:Static h:UiHelper.OpenLink}"
                                        CommandParameter="{Binding}"
                                        IsVisible="{Binding Link, Converter={StaticResource NullOrWhiteSpaceToBooleanValueConverterReverse}}">
                                    <mi:MaterialIcon Kind="Link" />
                                </Button>
                            </Grid>
                        </Grid>
                    </Button>
                </DataTemplate>
            </Setter>
        </Style>

        <Style Selector="c|GridColumnStackControl.by-status">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="c|GridColumnStackControl.by-type">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.none c|GridColumnStackControl.none">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-status c|GridColumnStackControl.by-status">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-type c|GridColumnStackControl.by-type">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="Button.select-all">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.multi Button.select-all">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.multi c|GridColumnStackControl.to-do-items-control">
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="tm:ToDoItemEntityNotify">
                    <ToggleButton Classes="content-alignment-stretch to-do-item"
                                  Padding="0"
                                  IsChecked="{Binding IsSelected}">
                        <Border Margin="0" CornerRadius="0" Padding="5">
                            <StackPanel>
                                <Grid ColumnDefinitions="*,Auto,*">
                                    <Rectangle Margin="0,0,3,0"
                                               Height="2"
                                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding Type, Converter={StaticResource ToDoItemTypeLocalizationValueConverter}}" />
                                    <Rectangle Grid.Column="2"
                                               Margin="3,0,3,0"
                                               Height="2"
                                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                </Grid>

                                <ScrollViewer Classes="horizontal">
                                    <TextBlock Classes="alignment-left" Text="{Binding Name}" />
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                    </ToggleButton>
                </DataTemplate>
            </Setter>
        </Style>
    </UserControl.Styles>

    <StackPanel x:Name="MainPanel">
        <Grid ColumnDefinitions="Auto,*"
              Margin="2">
            <ToggleButton Classes="alignment-center"
                          IsChecked="{Binding IsMulti}">
                <mi:MaterialIcon Kind="CheckAll" />
            </ToggleButton>

            <StackPanel Grid.Column="1" Margin="2,0,2,0">
                <TextBlock Classes="field"
                           Text="{DynamicResource MultiToDoItemsView.GroupBy}" />
                <c:EnumSelectorControl SelectedEnum="{Binding GroupBy}" />
            </StackPanel>
        </Grid>

        <ContentControl Content="{Binding Favorite}"
                        IsVisible="{Binding Favorite.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

        <Panel>
            <c:GridColumnStackControl Classes="to-do-items-group none">
                <ContentControl Content="{Binding Items}"
                                IsVisible="{Binding Items.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </c:GridColumnStackControl>

            <c:GridColumnStackControl Classes="to-do-items-group by-type">
                <ContentControl Content="{Binding Groups}"
                                IsVisible="{Binding Groups.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Values}"
                                IsVisible="{Binding Values.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Steps}"
                                IsVisible="{Binding Steps.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Circles}"
                                IsVisible="{Binding Circles.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Planneds}"
                                IsVisible="{Binding Planneds.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding PeriodicityOffsets}"
                                IsVisible="{Binding PeriodicityOffsets.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Periodicitys}"
                                IsVisible="{Binding Periodicitys.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding References}"
                                IsVisible="{Binding References.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </c:GridColumnStackControl>

            <c:GridColumnStackControl Classes="to-do-items-group by-status">
                <ContentControl Content="{Binding Missed}"
                                IsVisible="{Binding Missed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding ReadyForCompleted}"
                                IsVisible="{Binding ReadyForCompleted.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Planned}"
                                IsVisible="{Binding Planned.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Completed}"
                                IsVisible="{Binding Completed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </c:GridColumnStackControl>
        </Panel>
    </StackPanel>
</c:MainUserControl>