<c:MainUserControl x:TypeArguments="vm:MultiToDoItemsViewModel" xmlns="https://github.com/avaloniaui"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:vm="clr-namespace:Spravy.Ui.Features.ToDo.ViewModels"
                   xmlns:v="clr-namespace:Spravy.Ui.Features.ToDo.Views"
                   xmlns:tm="clr-namespace:Spravy.Ui.Features.ToDo.Models"
                   xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                   xmlns:c="clr-namespace:Spravy.Ui.Controls"
                   xmlns:h="clr-namespace:Spravy.Ui.Helpers"
                   xmlns:te="clr-namespace:Spravy.Ui.Features.ToDo.Enums"
                   mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                   x:Class="Spravy.Ui.Features.ToDo.Views.MultiToDoItemsView"
                   x:DataType="vm:MultiToDoItemsViewModel"
                   Classes.none="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.None}}"
                   Classes.by-status="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByStatus}}"
                   Classes.by-type="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByType}}"
                   Classes.multi="{Binding IsMulti}">
    <UserControl.Styles>
        <Style Selector="ItemsControl.none">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ItemsControl.by-status">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ItemsControl.by-type">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.none ItemsControl.none">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-status ItemsControl.by-status">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-type ItemsControl.by-type">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="Button.select-all">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.multi Button.select-all">
            <Setter Property="IsVisible" Value="True" />
        </Style>
    </UserControl.Styles>

    <StackPanel x:Name="MainPanel">
        <Grid ColumnDefinitions="Auto,*"
              Margin="2">
            <ToggleButton Classes="alignment-center"
                          IsChecked="{Binding IsMulti}">
                <mi:MaterialIcon Kind="CheckAll" />
            </ToggleButton>

            <StackPanel Grid.Column="1" Margin="2,0,2,0">
                <TextBlock Classes="field"
                           Text="{DynamicResource MultiToDoItemsView.GroupBy}" />
                <c:EnumSelectorControl SelectedEnum="{Binding GroupBy}" />
            </StackPanel>
        </Grid>

        <ContentControl Content="{Binding Favorite}"
                        IsVisible="{Binding Favorite.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

        <c:ViewSelectorControl State="{Binding IsMulti}">
            <c:ViewSelectorItemControl State="{x:Static h:UiHelper.False}">
                <Panel>
                    <ItemsControl Classes="to-do-items-group none">
                        <ContentControl Content="{Binding Items}"
                                        IsVisible="{Binding Items.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>

                    <ItemsControl Classes="to-do-items-group by-type">
                        <ContentControl Content="{Binding Groups}"
                                        IsVisible="{Binding Groups.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Values}"
                                        IsVisible="{Binding Values.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Steps}"
                                        IsVisible="{Binding Steps.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Circles}"
                                        IsVisible="{Binding Circles.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Planneds}"
                                        IsVisible="{Binding Planneds.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding PeriodicityOffsets}"
                                        IsVisible="{Binding PeriodicityOffsets.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Periodicitys}"
                                        IsVisible="{Binding Periodicitys.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding References}"
                                        IsVisible="{Binding References.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>

                    <ItemsControl Classes="to-do-items-group by-status">
                        <ContentControl Content="{Binding Missed}"
                                        IsVisible="{Binding Missed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding ReadyForCompleted}"
                                        IsVisible="{Binding ReadyForCompleted.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Planned}"
                                        IsVisible="{Binding Planned.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Completed}"
                                        IsVisible="{Binding Completed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>
                </Panel>
            </c:ViewSelectorItemControl>

            <c:ViewSelectorItemControl State="{x:Static h:UiHelper.True}">
                <Panel>
                    <Panel.DataTemplates>
                        <DataTemplate DataType="tm:ToDoItemEntityNotify">
                            <ToggleButton Classes="content-alignment-stretch to-do-item"
                                          Padding="0"
                                          IsChecked="{Binding IsSelected}">
                                <Border Margin="0" CornerRadius="0" Padding="5">
                                    <StackPanel>
                                        <Grid ColumnDefinitions="*,Auto,*">
                                            <Rectangle Margin="0,0,3,0"
                                                       Height="2"
                                                       Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                            <TextBlock Grid.Column="1"
                                                       Text="{Binding Type, Converter={StaticResource ToDoItemTypeLocalizationValueConverter}}" />
                                            <Rectangle Grid.Column="2"
                                                       Margin="3,0,3,0"
                                                       Height="2"
                                                       Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                        </Grid>

                                        <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                                      HorizontalScrollBarVisibility="Auto">
                                            <TextBlock Classes="alignment-left" Text="{Binding Name}" />
                                        </ScrollViewer>
                                    </StackPanel>
                                </Border>
                            </ToggleButton>
                        </DataTemplate>
                    </Panel.DataTemplates>

                    <ItemsControl Classes="to-do-items-group none">
                        <ContentControl Content="{Binding Items}"
                                        IsVisible="{Binding Items.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>

                    <ItemsControl Classes="to-do-items-group by-type">
                        <ContentControl Content="{Binding Groups}"
                                        IsVisible="{Binding Groups.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Values}"
                                        IsVisible="{Binding Values.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Steps}"
                                        IsVisible="{Binding Steps.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Circles}"
                                        IsVisible="{Binding Circles.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Planneds}"
                                        IsVisible="{Binding Planneds.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding PeriodicityOffsets}"
                                        IsVisible="{Binding PeriodicityOffsets.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Periodicitys}"
                                        IsVisible="{Binding Periodicitys.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding References}"
                                        IsVisible="{Binding References.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>

                    <ItemsControl Classes="to-do-items-group by-status">
                        <ContentControl Content="{Binding Missed}"
                                        IsVisible="{Binding Missed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding ReadyForCompleted}"
                                        IsVisible="{Binding ReadyForCompleted.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Planned}"
                                        IsVisible="{Binding Planned.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                        <ContentControl Content="{Binding Completed}"
                                        IsVisible="{Binding Completed.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </ItemsControl>
                </Panel>
            </c:ViewSelectorItemControl>
        </c:ViewSelectorControl>
    </StackPanel>
</c:MainUserControl>