<ru:ReactiveUserControl x:TypeArguments="vm:MultiToDoItemsViewModel"
                        xmlns="https://github.com/avaloniaui"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:ru="http://reactiveui.net"
                        xmlns:vm="clr-namespace:Spravy.Ui.Features.ToDo.ViewModels"
                        xmlns:v="clr-namespace:Spravy.Ui.Features.ToDo.Views"
                        xmlns:tm="clr-namespace:Spravy.Ui.Features.ToDo.Models"
                        xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                        xmlns:c="clr-namespace:Spravy.Ui.Controls"
                        xmlns:h="clr-namespace:Spravy.Ui.Helpers"
                        xmlns:m="clr-namespace:Spravy.Ui.Models"
                        xmlns:ui="clr-namespace:Spravy.Ui"
                        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                        x:Class="Spravy.Ui.Features.ToDo.Views.MultiToDoItemsView"
                        x:DataType="vm:MultiToDoItemsViewModel">
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Initialized">
            <InvokeCommandAction Command="{x:Static h:UiHelper.MultiToDoItemsViewInitialized}"
                                 CommandParameter="{Binding $self}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>

    <UserControl.DataTemplates>
        <DataTemplate DataType="tm:ToDoItemEntityNotify">
            <Button Name="{x:Static ui:App.RootToDoItemButtonName}"
                    Command="{x:Static h:UiHelper.NavigateToToDoItem}"
                    CommandParameter="{Binding}"
                    Classes="alignment-stretch content-alignment-stretch to-do-item">
                <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto, Auto,*">
                    <ToggleButton Grid.Row="1"
                                  Grid.RowSpan="2"
                                  BorderThickness="1"
                                  BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                  Classes="alignment-top"
                                  Width="50"
                                  Height="50"
                                  Margin="0,0,5,5"
                                  Command="{x:Static h:UiHelper.Complete}"
                                  CommandParameter="{Binding}"
                                  IsVisible="{Binding IsCan, Converter={StaticResource ToDoItemCanNoneToBooleanReverseConverter}}"
                                  IsChecked="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanConverter}}">
                        <mi:MaterialIcon Kind="Check"
                                         Width="45"
                                         Height="45"
                                         IsVisible="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanConverter}}" />
                    </ToggleButton>

                    <Grid Grid.ColumnSpan="3" ColumnDefinitions="Auto,Auto,*,Auto,*,Auto,Auto">
                        <Rectangle Width="15"
                                   Margin="0,0,3,0"
                                   Height="2"
                                   Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                        <TextBlock Grid.Column="1"
                                   Text="{Binding Type, Converter={StaticResource ToDoItemTypeLocalizationValueConverter}}" />
                        <Rectangle Grid.Column="2"
                                   Margin="3,0,3,0"
                                   Height="2"
                                   Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                        <mi:MaterialIcon Grid.Column="3"
                                         PointerPressed="ReorderOnPointerPressed"
                                         Background="Transparent"
                                         Width="20"
                                         Height="20"
                                         Kind="ReorderHorizontal" />
                        <Rectangle Grid.Column="4"
                                   Margin="3,0,3,0"
                                   Height="2"
                                   Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                        <TextBlock Grid.Column="5"
                                   Text="{Binding Status, Converter={StaticResource ToDoItemStatusLocalizationValueConverter}}" />
                        <Rectangle Grid.Column="6"
                                   Width="15"
                                   Margin="3,0,0,0"
                                   Height="2"
                                   Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                    </Grid>

                    <StackPanel Grid.Column="1" Grid.Row="2">
                        <TextBlock Margin="5,5,0,0"
                                   Classes="text-wrap vertical-alignment-center alignment-left"
                                   Text="{Binding Name}" />

                        <Button Margin="0,0,0,5"
                                IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}"
                                Command="{x:Static h:UiHelper.NavigateToActiveToDoItem}"
                                CommandParameter="{Binding}">
                            <TextBlock Text="{Binding Active.Name}" TextWrapping="Wrap" />
                        </Button>
                    </StackPanel>

                    <Grid Grid.Row="2"
                          Grid.Column="2"
                          ColumnDefinitions="Auto,Auto"
                          RowDefinitions="Auto,Auto">
                        <Button>
                            <Button.DataTemplates>
                                <DataTemplate x:DataType="m:SpravyCommandNotify">
                                    <ContentControl Content="{Binding Text}" />
                                </DataTemplate>
                            </Button.DataTemplates>

                            <Button.Styles>
                                <Style Selector="MenuItem" x:DataType="m:SpravyCommandNotify">
                                    <Setter Property="Command" Value="{Binding Item.Command}" />
                                    <Setter Property="CommandParameter" Value="{Binding $parent[Button].DataContext}" />
                                    
                                    <Setter Property="Icon">
                                        <Template>
                                            <mi:MaterialIcon Kind="{Binding Kind}" />
                                        </Template>
                                    </Setter>
                                </Style>
                            </Button.Styles>

                            <Button.Flyout>
                                <MenuFlyout ItemsSource="{Binding CompactCommands}" />
                            </Button.Flyout>

                            <mi:MaterialIcon Kind="DotsHorizontal" />
                        </Button>

                        <Panel Grid.Column="1">
                            <Button Command="{x:Static h:UiHelper.RemoveFromFavorite}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsFavorite}">
                                <mi:MaterialIcon Kind="Star" />
                            </Button>

                            <Button Command="{x:Static h:UiHelper.AddToFavorite}"
                                    CommandParameter="{Binding}"
                                    IsVisible="{Binding IsFavorite, Converter={StaticResource ReverseBooleanValueConverter}}">
                                <mi:MaterialIcon Kind="StarOutline" />
                            </Button>
                        </Panel>

                        <Button Grid.Row="1"
                                Grid.Column="1"
                                Command="{x:Static h:UiHelper.OpenLink}"
                                CommandParameter="{Binding}"
                                IsVisible="{Binding Link, Converter={StaticResource NullOrWhiteSpaceToBooleanValueConverterReverse}}">
                            <mi:MaterialIcon Kind="Link" />
                        </Button>
                    </Grid>
                </Grid>
            </Button>
        </DataTemplate>
    </UserControl.DataTemplates>

    <UserControl.Resources>
        <!-- ReSharper disable once Xaml.RedundantResource -->
        <Styles x:Key="CardToDoItems">
            <Style Selector="ItemsControl.to-do-items-control">
                <Setter Property="ItemsPanel">
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </Setter>
            </Style>

            <Style Selector="Button.to-do-item">
                <Setter Property="Width" Value="300" />
            </Style>

            <Style Selector="ToggleButton.to-do-item">
                <Setter Property="Width" Value="200" />
            </Style>
        </Styles>
    </UserControl.Resources>

    <StackPanel>
        <Grid ColumnDefinitions="Auto,Auto,*"
              Margin="2">
            <ToggleButton Classes="alignment-center"
                          IsChecked="{Binding IsMulti}">
                <mi:MaterialIcon Kind="CheckAll" />
            </ToggleButton>

            <StackPanel Grid.Column="1" Margin="2,0,2,0">
                <TextBlock Classes="field"
                           Text="{DynamicResource MultiToDoItemsView.GroupBy}" />
                <c:EnumSelectorControl SelectedEnum="{Binding GroupBy}" />
            </StackPanel>

            <StackPanel Grid.Column="2">
                <TextBlock Classes="field"
                           Text="{DynamicResource MultiToDoItemsView.ViewLike}" />
                <c:EnumSelectorControl SelectedEnum="{Binding ToDoItemViewType}" />
            </StackPanel>
        </Grid>

        <ContentControl Content="{Binding Favorite}"
                        IsVisible="{Binding Favorite.Items.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
        <ContentControl Name="{x:Static v:MultiToDoItemsView.ContentContentControlName}"
                        IsVisible="{Binding IsMulti, Converter={StaticResource ReverseBooleanValueConverter}}"
                        Content="{Binding ToDoItems}" />

        <ContentControl IsVisible="{Binding IsMulti}"
                        Content="{Binding ToDoItems}">
            <ContentControl.DataTemplates>
                <DataTemplate DataType="tm:ToDoItemEntityNotify">
                    <ToggleButton Classes="content-alignment-stretch to-do-item" Padding="0"
                                  IsChecked="{Binding IsSelected}">
                        <Border Margin="0" CornerRadius="0" Padding="5">
                            <StackPanel>
                                <Grid ColumnDefinitions="*,Auto,*">
                                    <Rectangle Margin="0,0,3,0"
                                               Height="2"
                                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding Type, Converter={StaticResource ToDoItemTypeLocalizationValueConverter}}" />
                                    <Rectangle Grid.Column="2"
                                               Margin="3,0,3,0"
                                               Height="2"
                                               Fill="{Binding Status, Converter={StaticResource ToDoItemStatusToBrushValueConverter}}" />
                                </Grid>

                                <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                              HorizontalScrollBarVisibility="Auto">
                                    <TextBlock Classes="alignment-left" Text="{Binding Name}" />
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                    </ToggleButton>
                </DataTemplate>
            </ContentControl.DataTemplates>
        </ContentControl>
    </StackPanel>
</ru:ReactiveUserControl>