<c:MainUserControl x:TypeArguments="vm:MultiToDoItemsViewModel" xmlns="https://github.com/avaloniaui"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:vm="clr-namespace:Spravy.Ui.Features.ToDo.ViewModels"
                   xmlns:v="clr-namespace:Spravy.Ui.Features.ToDo.Views"
                   xmlns:tm="clr-namespace:Spravy.Ui.Features.ToDo.Models"
                   xmlns:c="clr-namespace:Spravy.Ui.Controls"
                   xmlns:te="clr-namespace:Spravy.Ui.Features.ToDo.Enums"
                   xmlns:h="clr-namespace:Spravy.Ui.Helpers"
                   xmlns:m="clr-namespace:Spravy.Ui.Models"
                   xmlns:tde="clr-namespace:Spravy.ToDo.Domain.Enums;assembly=Spravy.ToDo.Domain"
                   xmlns:i="https://github.com/projektanker/icons.avalonia"
                   xmlns:e="clr-namespace:Spravy.Domain.Enums;assembly=Spravy.Domain"
                   xmlns:mdxaml="https://github.com/whistyun/Markdown.Avalonia.Tight"
                   mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                   x:Class="Spravy.Ui.Features.ToDo.Views.MultiToDoItemsView"
                   x:DataType="vm:MultiToDoItemsViewModel"
                   Classes.none="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.None}}"
                   Classes.by-status="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByStatus}}"
                   Classes.by-type="{Binding GroupBy, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static te:GroupBy.ByType}}"
                   Classes.multi="{Binding IsMulti}">
    <UserControl.Styles>
        <Style Selector="ItemsControl.none">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ItemsControl.to-do-items-control">
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="tm:ToDoItemEntityNotify">
                    <Button x:Name="RootToDoItemButton"
                            Command="{x:Static h:UiHelper.NavigateToToDoItem}"
                            CommandParameter="{Binding}"
                            Classes="alignment-stretch content-alignment-stretch to-do-item"
                            Background="{Binding Color, Converter={StaticResource ColorToButtonBackgroundConverter}}">
                        <ToolTip.Tip>
                            <c:ViewSelectorControl State="{Binding DescriptionType}">
                                <c:ViewSelectorItemControl State="{x:Static e:DescriptionType.PlainText}">
                                    <TextBlock Classes="alignment-left text-wrap"
                                               Text="{Binding Description}" />
                                </c:ViewSelectorItemControl>

                                <c:ViewSelectorItemControl State="{x:Static e:DescriptionType.Markdown}">
                                    <mdxaml:MarkdownScrollViewer MinWidth="320" Markdown="{Binding Description}" />
                                </c:ViewSelectorItemControl>
                            </c:ViewSelectorControl>
                        </ToolTip.Tip>

                        <Grid ColumnDefinitions="*,Auto">
                            <Grid ColumnDefinitions="Auto,*">
                                <ToggleButton BorderThickness="1"
                                              BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                              Width="50"
                                              Height="50"
                                              Margin="0,0,5,5"
                                              Command="{x:Static h:UiHelper.Complete}"
                                              CommandParameter="{Binding}"
                                              IsVisible="{Binding IsCan, Converter={StaticResource ToDoItemCanNoneToBooleanReverseConverter}}"
                                              IsChecked="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanReverseConverter}}">
                                    <Panel>
                                        <i:Icon Value="mdi-check" Classes="h1"
                                                IsVisible="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanReverseConverter}}" />
                                        <i:Icon Classes="h2"
                                                Value="{Binding Icon}"
                                                IsVisible="{Binding IsCan, Mode=OneWay, Converter={StaticResource ToDoItemCanCompleteToBooleanConverter}}" />
                                    </Panel>
                                </ToggleButton>

                                <StackPanel Grid.Column="1" Classes="alignment-left vertical-alignment-center">
                                    <TextBlock Margin="5"
                                               Classes="text-wrap alignment-left h5"
                                               Classes.miss="{Binding Status, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static tde:ToDoItemStatus.Miss}}"
                                               Classes.completed="{Binding Status, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static tde:ToDoItemStatus.Completed}}"
                                               Classes.ready-for-complete="{Binding Status, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static tde:ToDoItemStatus.ReadyForComplete}}"
                                               Classes.planned="{Binding Status, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static tde:ToDoItemStatus.Planned}}"
                                               Classes.coming-soon="{Binding Status, Converter={StaticResource ObjectEqualsParameterConverter}, ConverterParameter={x:Static tde:ToDoItemStatus.ComingSoon}}"
                                               Text="{Binding Name}" />

                                    <Button DockPanel.Dock="Left"
                                            Background="{Binding Active.Color, Converter={StaticResource ColorToButtonBackgroundConverter}}"
                                            IsVisible="{Binding Active, Converter={StaticResource NullToBooleanConverter}}"
                                            Command="{x:Static h:UiHelper.NavigateToActiveToDoItem}"
                                            CommandParameter="{Binding}">
                                        <Grid ColumnDefinitions="Auto, *">
                                            <i:Icon Classes="h6"
                                                    Value="{Binding Active.Icon}"
                                                    Margin="0,0,4,0"
                                                    IsVisible="{Binding Active.Icon, Converter={StaticResource StringIsNullOrWhiteSpaceConverter}, ConverterParameter={x:True}}" />
                                            <TextBlock Grid.Column="1"
                                                       Text="{Binding Active.Name}"
                                                       Classes="text-wrap small" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Column="1"
                                  ColumnDefinitions="Auto,Auto"
                                  RowDefinitions="Auto,Auto"
                                  Classes="alignment-top">
                                <StackPanel Grid.ColumnSpan="2" Classes="horizontal alignment-right">
                                    <Button>
                                        <Button.DataTemplates>
                                            <DataTemplate x:DataType="m:SpravyCommandNotify">
                                                <ContentControl Content="{Binding Text}" />
                                            </DataTemplate>
                                        </Button.DataTemplates>

                                        <Button.Styles>
                                            <Style Selector="MenuItem" x:DataType="m:SpravyCommandNotify">
                                                <Setter Property="Command" Value="{Binding Item.Command}" />
                                                <Setter Property="CommandParameter"
                                                        Value="{Binding $parent[Button].DataContext}" />

                                                <Setter Property="Icon">
                                                    <Template>
                                                        <i:Icon Value="{Binding Kind}" />
                                                    </Template>
                                                </Setter>
                                            </Style>
                                        </Button.Styles>

                                        <Button.Flyout>
                                            <MenuFlyout ItemsSource="{Binding Commands}" />
                                        </Button.Flyout>

                                        <i:Icon Value="mdi-dots-horizontal" />
                                    </Button>

                                    <Panel>
                                        <Button Command="{x:Static h:UiHelper.RemoveFromFavorite}"
                                                CommandParameter="{Binding}"
                                                IsVisible="{Binding IsFavorite}">
                                            <i:Icon Value="mdi-star" />
                                        </Button>

                                        <Button Command="{x:Static h:UiHelper.AddToFavorite}"
                                                CommandParameter="{Binding}"
                                                IsVisible="{Binding IsFavorite, Converter={StaticResource ReverseBooleanValueConverter}}">
                                            <i:Icon Value="mdi-star-outline" />
                                        </Button>
                                    </Panel>
                                </StackPanel>

                                <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
                                    <TextBlock Classes="small alignment-center"
                                               Text="{Binding Type, Converter={StaticResource EnumLocalizationValueConverter}}" />
                                    <TextBlock Text="{Binding ActualDueDate}"
                                               Classes="small alignment-center"
                                               IsVisible="{Binding ActualDueDate, Converter={StaticResource NullToBooleanConverter}}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Button>
                </DataTemplate>
            </Setter>
        </Style>

        <Style Selector="ItemsControl.by-status">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ItemsControl.by-type">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.none ItemsControl.none">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-status ItemsControl.by-status">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.by-type ItemsControl.by-type">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="Button.select-all">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.multi Button.select-all">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="v|MultiToDoItemsView.multi ItemsControl.to-do-items-control">
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="tm:ToDoItemEntityNotify">
                    <ToggleButton Classes="content-alignment-stretch to-do-item"
                                  IsChecked="{Binding IsSelected}"
                                  Background="{Binding Color, Converter={StaticResource ColorToButtonBackgroundConverter}}">
                        <StackPanel Classes="horizontal">
                            <i:Icon Margin="0,0,4,0" Value="{Binding Icon}" Classes="h3"
                                    IsVisible="{Binding Icon, Converter={StaticResource StringIsNullOrWhiteSpaceConverter}, ConverterParameter={x:True}}" />
                            <TextBlock Classes="text-wrap alignment-left h4" Text="{Binding Name}" />
                        </StackPanel>
                    </ToggleButton>
                </DataTemplate>
            </Setter>
        </Style>
    </UserControl.Styles>

    <StackPanel x:Name="MainPanel">
        <StackPanel Classes="horizontal" Margin="2">
            <StackPanel Margin="2,0,2,0">
                <TextBlock Classes="field"
                           Text="{DynamicResource Lang.GroupBy}" />
                <c:EnumSelectorControl MinWidth="150" Classes="combo-box" SelectedEnum="{Binding GroupBy}" />
            </StackPanel>

            <StackPanel Margin="2,0,2,0">
                <TextBlock Classes="field"
                           Text="{DynamicResource Lang.SortBy}" />
                <c:EnumSelectorControl MinWidth="150" Classes="combo-box" SelectedEnum="{Binding SortBy}" />
            </StackPanel>
        </StackPanel>

        <ContentControl Content="{Binding Favorite}"
                        IsVisible="{Binding Favorite.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

        <Panel>
            <ItemsControl Classes="to-do-items-group none">
                <ContentControl Content="{Binding Items}"
                                IsVisible="{Binding Items.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </ItemsControl>

            <ItemsControl Classes="to-do-items-group by-type">
                <ContentControl Content="{Binding Groups}"
                                IsVisible="{Binding Groups.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Values}"
                                IsVisible="{Binding Values.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Steps}"
                                IsVisible="{Binding Steps.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Circles}"
                                IsVisible="{Binding Circles.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Planneds}"
                                IsVisible="{Binding Planneds.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding PeriodicityOffsets}"
                                IsVisible="{Binding PeriodicityOffsets.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Periodicitys}"
                                IsVisible="{Binding Periodicitys.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding References}"
                                IsVisible="{Binding References.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </ItemsControl>

            <ItemsControl Classes="to-do-items-group by-status">
                <ContentControl Content="{Binding Missed}"
                                IsVisible="{Binding Missed.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding ReadyForCompleted}"
                                IsVisible="{Binding ReadyForCompleted.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Planned}"
                                IsVisible="{Binding Planned.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding ComingSoon}"
                                IsVisible="{Binding ComingSoon.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                <ContentControl Content="{Binding Completed}"
                                IsVisible="{Binding Completed.ToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
            </ItemsControl>
        </Panel>
    </StackPanel>
</c:MainUserControl>