<ru:ReactiveUserControl x:TypeArguments="vm:PageHeaderViewModel"
                        xmlns="https://github.com/avaloniaui"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                        xmlns:helpers="clr-namespace:Spravy.Ui.Helpers"
                        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                        xmlns:s="clr-namespace:Spravy.Ui.Services"
                        xmlns:ru="http://reactiveui.net"
                        xmlns:vm="clr-namespace:Spravy.Ui.ViewModels"
                        xmlns:m="clr-namespace:Spravy.Ui.Models"
                        xmlns:c="clr-namespace:SukiUI.Content;assembly=SukiUI"
                        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                        x:Class="Spravy.Ui.Views.PageHeaderView"
                        x:DataType="vm:PageHeaderViewModel">
    <UserControl.Styles>
        <Style Selector="ItemsControl.adaptive">
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <AdaptiveBehavior SourceControl="{Binding $parent[TopLevel]}">
                            <AdaptiveClassSetter MinWidth="0"
                                                 MaxWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                 ClassName="small" />
                            <AdaptiveClassSetter MinWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                 MaxWidth="Infinity"
                                                 ClassName="wide" />
                        </AdaptiveBehavior>
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="Button.adaptive">
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <AdaptiveBehavior SourceControl="{Binding $parent[TopLevel]}">
                            <AdaptiveClassSetter MinWidth="0"
                                                 MaxWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                 ClassName="small" />
                            <AdaptiveClassSetter MinWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                 MaxWidth="Infinity"
                                                 ClassName="wide" />
                        </AdaptiveBehavior>
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="ItemsControl.small">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="ItemsControl.wide">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="Button.small">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="Button.wide">
            <Setter Property="IsVisible" Value="False" />
        </Style>
    </UserControl.Styles>

    <Grid ColumnDefinitions="Auto,*,Auto">
        <StackPanel Orientation="Horizontal">
            <Button Classes="Basic" Command="{x:Static s:CommandStorage.SwitchPaneCommand}">
                <PathIcon Data="{x:Static c:Icons.Menu}" />
            </Button>

            <ContentControl Content="{Binding LeftCommand}" />
        </StackPanel>

        <ScrollViewer Grid.Column="1"
                      VerticalScrollBarVisibility="Disabled"
                      HorizontalScrollBarVisibility="Auto"
                      HorizontalAlignment="Left"
                      Classes="mini">
            <ContentControl Content="{Binding Header}">
                <ContentControl.DataTemplates>
                    <DataTemplate DataType="sys:String">
                        <TextBlock Text="{Binding }" Classes="h3" />
                    </DataTemplate>
                </ContentControl.DataTemplates>
            </ContentControl>
        </ScrollViewer>

        <StackPanel Grid.Column="2" Orientation="Horizontal">
            <ContentControl Content="{Binding RightCommand}" />

            <Panel
                IsVisible="{Binding Commands.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                <ItemsControl HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              ItemsSource="{Binding Commands}"
                              Classes="adaptive-to-Do-item-view">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.DataTemplates>
                        <DataTemplate DataType="m:SpravyCommandNotify">
                            <Button Classes="Basic" Command="{Binding Item.Command}" Content="{Binding Kind}" />
                        </DataTemplate>
                    </ItemsControl.DataTemplates>
                </ItemsControl>

                <Button Classes="adaptive-to-Do-item-view Basic">
                    <Button.DataTemplates>
                        <DataTemplate x:DataType="m:SpravyCommandNotify">
                            <ContentControl Content="{Binding Text}" />
                        </DataTemplate>
                    </Button.DataTemplates>

                    <Button.Styles>
                        <Style Selector="MenuItem" x:DataType="m:SpravyCommandNotify">
                            <Setter Property="Command" Value="{Binding Item.Command}" />
                            <Setter Property="Icon" Value="{Binding Kind}" />
                        </Style>
                    </Button.Styles>

                    <Button.Flyout>
                        <MenuFlyout ItemsSource="{Binding Commands}" />
                    </Button.Flyout>

                    <mi:MaterialIcon Kind="DotsHorizontal" />
                </Button>
            </Panel>
        </StackPanel>
    </Grid>
</ru:ReactiveUserControl>