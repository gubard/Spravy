<reactiveUi:ReactiveUserControl x:TypeArguments="viewModels:ToDoSubItemsViewModel"
                                xmlns="https://github.com/avaloniaui"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:viewModels="clr-namespace:Spravy.Ui.ViewModels"
                                xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                                xmlns:views="clr-namespace:Spravy.Ui.Views"
                                xmlns:ir="clr-namespace:Avalonia.Xaml.Interactions.Responsive;assembly=Avalonia.Xaml.Interactions.Responsive"
                                xmlns:helpers="clr-namespace:Spravy.Ui.Helpers"
                                mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                                x:Class="Spravy.Ui.Views.ToDoSubItemsView"
                                x:DataType="viewModels:ToDoSubItemsViewModel">
    <Design.DataContext>
        <viewModels:ToDoSubItemsViewModel />
    </Design.DataContext>

    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Initialized">
            <InvokeCommandAction Command="{Binding InitializedCommand}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>

    <UserControl.Styles>
        <Style Selector="UniformGrid.adaptive">
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ir:AdaptiveBehavior SourceControl="{Binding $parent[TopLevel]}">
                            <ir:AdaptiveClassSetter MinWidth="0"
                                                    MaxWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                    ClassName="small" />
                            <ir:AdaptiveClassSetter MinWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                    MaxWidth="Infinity" ClassName="wide" />
                        </ir:AdaptiveBehavior>
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="StackPanel.adaptive">
            <Setter Property="(Interaction.Behaviors)">
                <BehaviorCollectionTemplate>
                    <BehaviorCollection>
                        <ir:AdaptiveBehavior SourceControl="{Binding $parent[TopLevel]}">
                            <ir:AdaptiveClassSetter MinWidth="0"
                                                    MaxWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                    ClassName="small" />
                            <ir:AdaptiveClassSetter MinWidth="{x:Static helpers:MaterialDesignSize.MinMedium}"
                                                    MaxWidth="Infinity"
                                                    ClassName="wide" />
                        </ir:AdaptiveBehavior>
                    </BehaviorCollection>
                </BehaviorCollectionTemplate>
            </Setter>
        </Style>

        <Style Selector="UniformGrid.small">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="UniformGrid.wide">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="StackPanel.small">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="StackPanel.wide">
            <Setter Property="IsVisible" Value="False" />
        </Style>
    </UserControl.Styles>

    <Panel>
        <ScrollViewer>
            <StackPanel>
                <Expander IsExpanded="True"
                          IsVisible="{Binding PinnedToDoItems.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                    <Expander.Header>
                        Pinned
                    </Expander.Header>

                    <ItemsControl ItemsSource="{Binding PinnedToDoItems}" />
                </Expander>
                <Panel>
                    <UniformGrid Classes="adaptive" Rows="1">
                        <ItemsControl ItemsSource="{Binding Missed}"
                                      IsVisible="{Binding Missed.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

                        <ItemsControl ItemsSource="{Binding ReadyForCompleted}"
                                      IsVisible="{Binding ReadyForCompleted.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

                        <ItemsControl ItemsSource="{Binding Planned}"
                                      IsVisible="{Binding Planned.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />

                        <ItemsControl ItemsSource="{Binding Completed}"
                                      IsVisible="{Binding Completed.Count, Converter={StaticResource Int32ToIsVisibleConverter}}" />
                    </UniformGrid>

                    <StackPanel Classes="adaptive">
                        <Expander IsExpanded="True"
                                  IsVisible="{Binding Missed.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                            <Expander.Header>
                                Missed
                            </Expander.Header>

                            <ItemsControl ItemsSource="{Binding Missed}" />
                        </Expander>

                        <Expander IsExpanded="True"
                                  IsVisible="{Binding ReadyForCompleted.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                            <Expander.Header>
                                ReadyForCompleted
                            </Expander.Header>

                            <ItemsControl ItemsSource="{Binding ReadyForCompleted}" />
                        </Expander>

                        <Expander
                            IsVisible="{Binding Planned.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                            <Expander.Header>
                                Planned
                            </Expander.Header>

                            <ItemsControl ItemsSource="{Binding Planned}" />
                        </Expander>

                        <Expander
                            IsVisible="{Binding Completed.Count, Converter={StaticResource Int32ToIsVisibleConverter}}">
                            <Expander.Header>
                                Completed
                            </Expander.Header>

                            <ItemsControl ItemsSource="{Binding Completed}" />
                        </Expander>
                    </StackPanel>
                </Panel>
            </StackPanel>
        </ScrollViewer>
    </Panel>
</reactiveUi:ReactiveUserControl>